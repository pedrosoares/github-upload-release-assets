name: Application CD

on:
  # push:
  #   branches:
  #     - main
  release:
    types:
      - released

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            bin: ./target/x86_64-pc-windows-gnu/release/github-upload-release-assets.exe
            asset: windows-gnu-github-upload-release-assets-${{ github.ref_name }}.zip
            platform: windows

          # - target: x86_64-unknown-linux-musl
          #   bin: ./target/x86_64-unknown-linux-musl/release/github-upload-release-assets
          #   asset: linux-musl-github-upload-release-assets-${{ github.ref_name }}.zip
          #   platform: linux

          - target: x86_64-unknown-linux-gnu
            bin: ./target/x86_64-unknown-linux-gnu/release/github-upload-release-assets
            asset: linux-gnu-github-upload-release-assets-${{ github.ref_name }}.zip
            platform: linux

          # - target: x86_64-apple-darwin
          #   bin: ./target/x86_64-apple-darwin/release/github-upload-release-assets
          #   asset: macos-darwin-github-upload-release-assets-${{ github.ref_name }}.zip
          #   platform: macos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
        timeout-minutes: 1

      - name: Setup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}

      - name: Install Windows Deps
        if: ${{ matrix.platform }} == "windows"
        run: sudo apt-get install mingw-w64

      # - name: Install Linux Musl Deps
      #   if: ${{ matrix.target }} == "x86_64-unknown-linux-musl"
      #   run: sudo apt-get install musl-gcc

      - name: Compile
        run: cargo build --release --target=${{ matrix.target }}

      - name: Zip Asset
        run: |
          find . | grep "github-upload-release-assets"
          zip -j ${{ matrix.asset }} README.md LICENSE ${{ matrix.bin }}

      - name: Update Release - Add Asset
        run: |
          curl -L https://github.com/pedrosoares/github-upload-release-assets/releases/download/1.0.0/linux-gnu-github-upload-release-assets-1.0.0.zip > gura.zip
          mkdir gura
          unzip gura.zip -d gura
          ./gura/github-upload-release-assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_CREATED_TAG: ${{ github.ref_name }}
          GITHUB_REPOSITORY: "pedrosoares/github-upload-release-assets"
          ASSET_FILE: ${{ matrix.asset }}
